package ngram;
import java.io.IOException;
import java.util.*;

import org.apache.hadoop.fs.Path;
import org.apache.hadoop.conf.*;
import org.apache.hadoop.io.*;
import org.apache.hadoop.mapreduce.*;
import org.apache.hadoop.mapreduce.lib.*;

public class ngramWordCount {
	public static class ngMap extends
		Mapper<LongWritable ,Text, Text, IntWritable> {
			
		public void map(LongWritable key, Text value, Context context)
				throws IOException, InterruptedException {
					
				String line = value.toString();
				StringTokenizer tokenizer = new StringTokenizer(line);
				while (tokenizer.hasMoreTokens()){
					value.set(tokenizer.nextToken());
					context.write(value, new IntWritable(1));
				}
				
		}
	}
	
	public static class ngReduce extends
		Reducer<Text, IntWritable, Text, IntWritable>{
		
		public void reduce(Text key, Iterable<IntWritable> values, Context context)
			throws IOException, InterruptedException {
			
			int sum = 0;
			for(IntWritable x : values){
				sum += x.get();
			}
			context.write(key, new IntWritable(sum));
		}
	}
	
	public static void main(String[] args){
		
	}
}
