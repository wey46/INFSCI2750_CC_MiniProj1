package comlog.tophitsurl;
import java.io.IOException;
import java.util.*;


import org.apache.hadoop.fs.Path;
import org.apache.hadoop.conf.*;
import org.apache.hadoop.io.*;
import org.apache.hadoop.mapreduce.*;
import org.apache.hadoop.mapreduce.Mapper.Context;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.input.TextInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;

public class TopHitsUrl {
	
	public static class ngMap extends
		Mapper<Object ,Text, Text, IntWritable> {
		
		private final static IntWritable one = new IntWritable(1);	
		private final static Text onUrl = new Text();	
		
		public void map(Object key, Text value, Context context)
			throws IOException, InterruptedException {
			
			String line = value.toString();
			int sidx = line.indexOf(" ");
			String url = line.substring(0, sidx);
			onUrl.set(url);
			context.write(onUrl, one);
			
		}
	}
	
	public static class ngReduce extends
		Reducer<Text, IntWritable, Text, IntWritable>{
		
		public static TreeMap<Integer, Text> = new TreeMap<>
		
		public void reduce(Text key, Iterable<IntWritable> values, Context context)
			throws IOException, InterruptedException {
			
			int sum = 0;
			for(IntWritable x : values){
				sum += x.get();
			}
			countMap.put(key, new IntWritable(sum));
		}
		
		protected void cleanup(Context context) throws IOException, InterruptedException {
			Map sortedMap = sortByValues(countMap);
		}
	}
	
	public static void main(String[] args) throws Exception {
		Configuration conf = new Configuration();
		
		Job job = Job.getInstance(conf, "URLcount");		
		job.setJarByClass(TopHitsUrl.class);
		job.setMapperClass(ngMap.class);
		job.setReducerClass(ngReduce.class);
		
		job.setOutputKeyClass(Text.class);
		job.setOutputValueClass(IntWritable.class);
		job.setMapOutputValueClass(IntWritable.class);
		job.setMapOutputKeyClass(Text.class);
		
		job.setInputFormatClass(TextInputFormat.class);
		job.setOutputFormatClass(TextOutputFormat.class);
		
		FileInputFormat.addInputPath(job, new Path(args[0]));
		FileOutputFormat.setOutputPath(job, new Path(args[1]));
		
		System.exit(job.waitForCompletion(true)? 0 : 1);
	}
}
